<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Low Power uC RPi on Super Power IoT</title>
    <link>https://superpower.github.io/</link>
    <description>Recent content in Low Power uC RPi on Super Power IoT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Oct 2020 08:48:23 +0000</lastBuildDate><atom:link href="https://superpower.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apollo v1.0.0</title>
      <link>https://superpower.github.io/docs/uc/prod/apv100/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/prod/apv100/</guid>
      <description>10/03/2021 commit 7d541828Variant apollo-board_TPS63060# directory ./apollo-board_TPS63060  Top View#Bottom View#</description>
    </item>
    
    <item>
      <title>Description</title>
      <link>https://superpower.github.io/docs/rpi/description/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/rpi/description/</guid>
      <description>Repositories#main publishing repoRPI Team working forkFirmware repoSuper Power: Leto a Raspberry Pi UPS Solution#Description reference in gdriveProject Goals#Develop a community-based, and hence user sourced, multifunction UPS solution for use with the Raspberry Pi main SBC platform (currently RPi3 and 4 models). The board is designed to provide remote power or UPS solutions.</description>
    </item>
    
    <item>
      <title>Guidelines</title>
      <link>https://superpower.github.io/docs/project/guidelines/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/project/guidelines/</guid>
      <description>Guidelines#Good schematics show you the circuit. Bad schematics make you decipher them. Here you can find a bunch of guidelines we set up to get consistent schematics along the project.
Schematics#Clean Text placement# After placing a symbol make sure the designator is close to the symbol and does not overlap other text or tracks Make some space and move parts if they are too close Do not place text verticaly  Layout flow# Logical flow from left to right Power connectioncs should go up to positive voltages and down to negative voltages Rotate common symbols the same way to find similarities faster in a schematics  Schematic Symbols# Show pins of an IC in a position relevant to their function, not how they happen to stick out of the chip.</description>
    </item>
    
    <item>
      <title>Schematics (ESP32 shield)</title>
      <link>https://superpower.github.io/docs/uc/original/schematics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/original/schematics/</guid>
      <description>schematics 21/12/2020 commit e659155Top View#Full Screenfunction setup_svg_panzoom(){let params = {panEnabled: true,zoomEnabled: true,dblClickZoomEnabled: true,controlIconsEnabled: false,mouseWheelZoomEnabled: true,preventMouseEventsDefault: true,zoomScaleSensitivity: 0.6,minZoom: 0.5,maxZoom: 4,fit: true, contain: true, center: true, refreshRate: &#39;auto&#39;};let svg_pz = svgPanZoom(&#39;#svg-3ea1810aac0ba180&#39; ,params);window[&#34;svg_3ea1810aac0ba180&#34;] = svg_pzlet button = document.getElementById(&#34;btn-3ea1810aac0ba180&#34;);button.onclick = ()={var elem = document.</description>
    </item>
    
    <item>
      <title>Schematics with ESP32</title>
      <link>https://superpower.github.io/docs/uc/lowcost/schematics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/lowcost/schematics/</guid>
      <description>schematics 17/02/2021 commit 808a2b8a8Top View#Full Screenfunction setup_svg_panzoom(){let params = {panEnabled: true,zoomEnabled: true,dblClickZoomEnabled: true,controlIconsEnabled: false,mouseWheelZoomEnabled: true,preventMouseEventsDefault: true,zoomScaleSensitivity: 0.6,minZoom: 0.5,maxZoom: 4,fit: true, contain: true, center: true, refreshRate: &#39;auto&#39;};let svg_pz = svgPanZoom(&#39;#svg-5fb1a529eee21e79&#39; ,params);window[&#34;svg_5fb1a529eee21e79&#34;] = svg_pzlet button = document.getElementById(&#34;btn-5fb1a529eee21e79&#34;);button.onclick = ()={var elem = document.</description>
    </item>
    
    <item>
      <title>Schematics with ESP32</title>
      <link>https://superpower.github.io/docs/uc/lowcost_single/schematics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/lowcost_single/schematics/</guid>
      <description>schematics 24/01/2021 commit d7be486Top View#Full Screenfunction setup_svg_panzoom(){let params = {panEnabled: true,zoomEnabled: true,dblClickZoomEnabled: true,controlIconsEnabled: false,mouseWheelZoomEnabled: true,preventMouseEventsDefault: true,zoomScaleSensitivity: 0.6,minZoom: 0.5,maxZoom: 4,fit: true, contain: true, center: true, refreshRate: &#39;auto&#39;};let svg_pz = svgPanZoom(&#39;#svg-c928a1fb27477b48&#39; ,params);window[&#34;svg_c928a1fb27477b48&#34;] = svg_pzlet button = document.getElementById(&#34;btn-c928a1fb27477b48&#34;);button.onclick = ()={var elem = document.</description>
    </item>
    
    <item>
      <title>Artemis v1.0.0</title>
      <link>https://superpower.github.io/docs/uc/prod/rtv100/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/prod/rtv100/</guid>
      <description>08/03/2021 commit f7696380Top View#Bottom View#</description>
    </item>
    
    <item>
      <title>Board</title>
      <link>https://superpower.github.io/docs/uc/lowcost/board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/lowcost/board/</guid>
      <description>schematics 17/02/2021 commit 808a2b8a8Top View#Bottom View#</description>
    </item>
    
    <item>
      <title>Board</title>
      <link>https://superpower.github.io/docs/uc/lowcost_single/board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/lowcost_single/board/</guid>
      <description>github action 01/02/2021schematics 01/02/2021 commit 1a7d5bbbview pdfTop View#Full Screenfunction setup_svg_panzoom(){let params = {panEnabled: true,zoomEnabled: true,dblClickZoomEnabled: true,controlIconsEnabled: false,mouseWheelZoomEnabled: true,preventMouseEventsDefault: true,zoomScaleSensitivity: 0.6,minZoom: 0.5,maxZoom: 4,fit: true, contain: true, center: true, refreshRate: &#39;auto&#39;};let svg_pz = svgPanZoom(&#39;#svg-b81bc8aa5511fcec&#39; ,params);window[&#34;svg_b81bc8aa5511fcec&#34;] = svg_pzlet button = document.</description>
    </item>
    
    <item>
      <title>Board (ESP32 shield)</title>
      <link>https://superpower.github.io/docs/uc/original/board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/original/board/</guid>
      <description>schematics 31/01/2021 commit 4732a2view pdfTop View#Full Screenfunction setup_svg_panzoom(){let params = {panEnabled: true,zoomEnabled: true,dblClickZoomEnabled: true,controlIconsEnabled: false,mouseWheelZoomEnabled: true,preventMouseEventsDefault: true,zoomScaleSensitivity: 0.6,minZoom: 0.5,maxZoom: 4,fit: true, contain: true, center: true, refreshRate: &#39;auto&#39;};let svg_pz = svgPanZoom(&#39;#svg-f01b921080e9c78e&#39; ,params);window[&#34;svg_f01b921080e9c78e&#34;] = svg_pzlet button = document.getElementById(&#34;btn-f01b921080e9c78e&#34;);button.</description>
    </item>
    
    <item>
      <title>Interactive BOM</title>
      <link>https://superpower.github.io/docs/uc/lowcost/ibom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/lowcost/ibom/</guid>
      <description>Interactive Bill of Materials#schematics 17/02/2021 commit 808a2b8a8Full screenOpen in a new pagevar button = document.getElementById(&#34;btn-75fa39f46dd66ce2&#34;);button.onclick = ()={var elem = document.getElementById(&#34;ifm-75fa39f46dd66ce2&#34;);if (elem.requestFullscreen) {elem.requestFullscreen();} else if (elem.webkitRequestFullscreen) { elem.webkitRequestFullscreen();} else if (elem.msRequestFullscreen) { elem.msRequestFullscreen();}};</description>
    </item>
    
    <item>
      <title>Interactive BOM</title>
      <link>https://superpower.github.io/docs/uc/lowcost_single/ibom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/lowcost_single/ibom/</guid>
      <description>Interactive Bill of Materials#schematics 24/01/2021 commit d7be486Full screenOpen in a new pagevar button = document.getElementById(&#34;btn-e4c4d3451377ce48&#34;);button.onclick = ()={var elem = document.getElementById(&#34;ifm-e4c4d3451377ce48&#34;);if (elem.requestFullscreen) {elem.requestFullscreen();} else if (elem.webkitRequestFullscreen) { elem.webkitRequestFullscreen();} else if (elem.msRequestFullscreen) { elem.msRequestFullscreen();}};</description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://superpower.github.io/docs/project/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/project/license/</guid>
      <description>CERN Open Hardware Licence Version 2 - Weakly Reciprocal
Preamble
CERN has developed this licence to promote collaboration among hardware designers and to provide a legal tool which supports the freedom to use, study, modify, share and distribute hardware designs and products based on those designs. Version 2 of the CERN Open Hardware Licence comes in three variants: CERN-OHL-P (permissive); and two reciprocal licences: this licence, CERN-OHL-W (weakly reciprocal) and CERN-OHL-S (strongly reciprocal).</description>
    </item>
    
    <item>
      <title>Requirements</title>
      <link>https://superpower.github.io/docs/rpi/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/rpi/requirements/</guid>
      <description>Requirements#Full screenOpen in a new pagevar button = document.getElementById(&#34;btn-636e81262af8d0df&#34;);button.onclick = ()={var elem = document.getElementById(&#34;ifm-636e81262af8d0df&#34;);if (elem.requestFullscreen) {elem.requestFullscreen();} else if (elem.webkitRequestFullscreen) { elem.webkitRequestFullscreen();} else if (elem.msRequestFullscreen) { elem.msRequestFullscreen();}};</description>
    </item>
    
    <item>
      <title>ESP Shield v1.0.0</title>
      <link>https://superpower.github.io/docs/uc/prod/esp100/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/prod/esp100/</guid>
      <description>05/03/2021 commit 9c5480Top View#Bottom View#</description>
    </item>
    
    <item>
      <title>Features</title>
      <link>https://superpower.github.io/docs/uc/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/features/</guid>
      <description>Reference Github ticketFeatures#   Features Apollo Artemis     5V outputs switchable / buck-boost switchable / boost   5V Output current 1.5A 0.5 A   3.3V outputs switchable / buck-boost switchable / linear   3.3V Output current 1A 0.5 A   Protected Battery output yes no (connector missing tbd)   RTC yes yes   RTC Bypass yes yes   NTC (temperature) yes yes   External wakeup yes yes   Button wakeup yes yes   Charger switching buck linear   Charging current 500mA 500mA   Power path yes no   Telemetry yes no   Chemistry Li-Ion/LiPo (Available chip for LiFePo4) Li-Ion/LiPo   sleep current (tbc) ?</description>
    </item>
    
    <item>
      <title>Interactive BOM</title>
      <link>https://superpower.github.io/docs/uc/original/ibom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/original/ibom/</guid>
      <description>Interactive Bill of Materials#schematics 21/12/2020 commit e659155Full screenOpen in a new pagevar button = document.getElementById(&#34;btn-802930e70fa595e0&#34;);button.onclick = ()={var elem = document.getElementById(&#34;ifm-802930e70fa595e0&#34;);if (elem.requestFullscreen) {elem.requestFullscreen();} else if (elem.webkitRequestFullscreen) { elem.webkitRequestFullscreen();} else if (elem.msRequestFullscreen) { elem.msRequestFullscreen();}};</description>
    </item>
    
    <item>
      <title>Schematics</title>
      <link>https://superpower.github.io/docs/rpi/schematics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/rpi/schematics/</guid>
      <description>schematics commit linkTop View#Full Screenfunction setup_svg_panzoom(){let params = {panEnabled: true,zoomEnabled: true,dblClickZoomEnabled: true,controlIconsEnabled: false,mouseWheelZoomEnabled: true,preventMouseEventsDefault: true,zoomScaleSensitivity: 0.6,minZoom: 0.5,maxZoom: 4,fit: true, contain: true, center: true, refreshRate: &#39;auto&#39;};let svg_pz = svgPanZoom(&#39;#svg-ab7eb4abeb0393b5&#39; ,params);window[&#34;svg_ab7eb4abeb0393b5&#34;] = svg_pzlet button = document.getElementById(&#34;btn-ab7eb4abeb0393b5&#34;);button.onclick = ()={var elem = document.</description>
    </item>
    
    <item>
      <title>This Website How to</title>
      <link>https://superpower.github.io/docs/project/howto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/project/howto/</guid>
      <description>This documentation is created with hugo a static website generator
install hugo#Installing hugo is quite simple, as it&amp;rsquo;s a standalone binary that can be downloaded and added to the system path
hugo getting-started : installingclone this repo#Note the recusive clone to add the git submodules as well
&amp;gt;git clone --recursive https://github.com/SuperPower/hugo_website.git&amp;gt;cd hugo_website test locally#no generation is required to test locally, hugo takes care of generating and serving</description>
    </item>
    
    <item>
      <title>Board</title>
      <link>https://superpower.github.io/docs/rpi/board/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/rpi/board/</guid>
      <description>github action 11/01/2021schematics 11/01/2021 commit d3b12cf7view pdfTop View#Full Screenfunction setup_svg_panzoom(){let params = {panEnabled: true,zoomEnabled: true,dblClickZoomEnabled: true,controlIconsEnabled: false,mouseWheelZoomEnabled: true,preventMouseEventsDefault: true,zoomScaleSensitivity: 0.6,minZoom: 0.5,maxZoom: 4,fit: true, contain: true, center: true, refreshRate: &#39;auto&#39;};let svg_pz = svgPanZoom(&#39;#svg-8b74164f79ac2d97&#39; ,params);window[&#34;svg_8b74164f79ac2d97&#34;] = svg_pzlet button = document.</description>
    </item>
    
    <item>
      <title>Requirements</title>
      <link>https://superpower.github.io/docs/uc/requirements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/requirements/</guid>
      <description>Requirements#Full screenOpen in a new pagevar button = document.getElementById(&#34;btn-c1faa48d69c2c798&#34;);button.onclick = ()={var elem = document.getElementById(&#34;ifm-c1faa48d69c2c798&#34;);if (elem.requestFullscreen) {elem.requestFullscreen();} else if (elem.webkitRequestFullscreen) { elem.webkitRequestFullscreen();} else if (elem.msRequestFullscreen) { elem.msRequestFullscreen();}};</description>
    </item>
    
    <item>
      <title>Developers Section</title>
      <link>https://superpower.github.io/docs/rpi/developers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/rpi/developers/</guid>
      <description>Firmware repo - DevelopersDevelopers section#In this section you&amp;rsquo;ll find all the documentation of the project and also how you can customize the behavior of the board by implementing your custom functionality
Specifications#Hardware##TODO describe the main chips of the board
Software#For the development of the code FreeRTOS was used because it offers the ability to divide the code in modules (tasks) and with this when new functionality is added you only need to consider (for the most part) the requirements and timing of the new functionality and FreeRTOS will handle the timing and resources of the other tasks so everything runs as expected.</description>
    </item>
    
    <item>
      <title>Workflow</title>
      <link>https://superpower.github.io/docs/uc/workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/workflow/</guid>
      <description>Branching and Pull-Requests# The master is the single point of truth and the latest version of the board. Only Merge-Requests are allowed to push changes onto the master. each merge-request needs 2 reviewers to be accepted. feature branches should start with the term feature/ and the name of the feature which will be implemented try to commit often and atomar and give each commit a nice description of what had been done use words like added, fixed, changed etc.</description>
    </item>
    
    <item>
      <title>Diagrams</title>
      <link>https://superpower.github.io/docs/uc/diagrams/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/uc/diagrams/</guid>
      <description>Block diagram#Use case#</description>
    </item>
    
    <item>
      <title>Interactive BOM</title>
      <link>https://superpower.github.io/docs/rpi/ibom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://superpower.github.io/docs/rpi/ibom/</guid>
      <description>Interactive Bill of Materials#schematics commit linkFull screenOpen in a new pagevar button = document.getElementById(&#34;btn-fcff0563fc99c7ad&#34;);button.onclick = ()={var elem = document.getElementById(&#34;ifm-fcff0563fc99c7ad&#34;);if (elem.requestFullscreen) {elem.requestFullscreen();} else if (elem.webkitRequestFullscreen) { elem.webkitRequestFullscreen();} else if (elem.msRequestFullscreen) { elem.msRequestFullscreen();}};</description>
    </item>
    
  </channel>
</rss>
